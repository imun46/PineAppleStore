<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--  dto 멤버 변수 이름이랑 id 콜럼에 있는 프로퍼티 이름이랑 다르게 하기 -->
<mapper namespace="com.itwill.shop.mapper.ReviewMapper">
	
	<!--Review 기본맵-->
	<resultMap id="reviewMap" type="Review" autoMapping="false">
		<id column="REVIEW_NO" property="reviewNo"/>
		<result column="REVIEW_TITLE" property="reviewTitle"/>
		<result column="REVIEW_CONTENT" property="reviewContent"/>
		<result column="REVIEW_IMAGE" property="reviewImage"/>
		<result column="REVIEW_RATING" property="reviewRating"/>
		<result column="REVIEW_DATE" property="reviewDate"/>
		
		<association property="product" javaType="Product"
					 resultMap="com.itwill.shop.mapper.ProductMapper.productMapBasic"></association>
	
		<association property="customer" javaType="Customer"
					 resultMap="com.itwill.shop.mapper.CustomerMapper.customerMapBasic"></association>
	
	</resultMap>
	
	<!--Review 맵 Product 포함-->
	<resultMap id="reviewMapProduct" type="Review" autoMapping="false">
		<id column="REVIEW_NO" property="reviewNo"/>
		<result column="REVIEW_TITLE" property="reviewTitle"/>
		<result column="REVIEW_CONTENT" property="reviewContent"/>
		<result column="REVIEW_IMAGE" property="reviewImage"/>
		<result column="REVIEW_RATING" property="reviewRating"/>
		<result column="REVIEW_DATE" property="reviewDate"/>
		
		<association property="product" javaType="Product"
					 resultMap="com.itwill.shop.mapper.ProductMapper.productMapBasic"></association>
		
	</resultMap>

	<!--Review 맵 Customer 포함-->
	<resultMap id="reviewMapCustomer" type="Review" autoMapping="false">
		<id column="REVIEW_NO" property="reviewNo"/>
		<result column="REVIEW_TITLE" property="reviewTitle"/>
		<result column="REVIEW_CONTENT" property="reviewContent"/>
		<result column="REVIEW_IMAGE" property="reviewImage"/>
		<result column="REVIEW_RATING" property="reviewRating"/>
		<result column="REVIEW_DATE" property="reviewDate"/>
		
		<association property="customer" javaType="Customer"
					 resultMap="com.itwill.shop.mapper.CustomerMapper.customerMapBasic"></association>
		
	</resultMap>



	
	<!-- 리뷰 작성 (리뷰 번호 반환) -->
	<insert id="insertReview"
		parameterType="Review">
		<selectKey order="BEFORE" resultType="int"
			keyProperty="reviewNo"> SELECT review_review_no_seq.nextval FROM DUAL</selectKey>
		INSERT INTO review (review_no, product_no, review_title,
		review_content, review_image, review_rating, customer_no)
		VALUES(
		#{reviewNo},
		#{product.productNo},
		#{reviewTitle},
		#{reviewContent},
		#{reviewImage},
		#{reviewRating},
		#{customer.customerNo})
	</insert>
	
	<!-- 리뷰 수정 -->
	<update id="updateReview" parameterType="Review">
		UPDATE review SET
			   review_title= #{reviewTitle},
			   review_content=#{reviewContent},
			   review_image=#{reviewImage},
			   review_rating=#{reviewRating},
			   review_date=SYSDATE
		 WHERE review_no=#{reviewNo}
		
	</update>
	
	<!-- 리뷰 삭제 -->
	<delete id="deleteReview" parameterType="int">
		DELETE FROM review
		 WHERE review_no=#{reviewNo}
	</delete>
	
	<!-- 회원 번호로 리뷰 리스트 반환 (회원) -->
	<select id="findReviewByCustomerNo" parameterType ="int" resultMap="reviewMap">
		SELECT r.review_no, r.review_title, r.review_content, r.review_image, r.review_rating, r.review_date,
			   p.product_no, p.product_name ,p.product_desc
		  FROM review r
		  JOIN product p
		    ON p.product_no=r.product_no
	     WHERE customer_no=#{customerNo}
	     ORDER BY r.review_date DESC
	     
	</select>
	
	<!-- 제품 번호로 리뷰 리스트 반환 -->
	<select id="findReviewByProductNo" parameterType ="int" resultMap="reviewMap">
		SELECT r.review_no, r.review_title, r.review_content, r.review_image, r.review_rating, r.review_date,
			   p.product_no, p.product_name,c.customer_no,c.customer_name,c.customer_nickname
		  FROM review r
		  JOIN customer c
		    ON c.customer_no=r.customer_no
		  JOIN product p
		    ON p.product_no = r.product_no
	     WHERE r.product_no=#{productNo}
	     ORDER BY r.review_date DESC
	     
	</select>
	
	<!-- 리뷰 번호로 리뷰 한개 반환 -->
	<select id="findReviewByReviewNo" parameterType="int" resultMap="reviewMap">
		SELECT r.review_no, r.review_title, r.review_content, r.review_image, r.review_rating, r.review_date,
			   p.product_no, p.product_name ,p.product_desc,
			   c.customer_no,c.customer_name
		  FROM review r
		  JOIN product p
		    ON p.product_no=r.product_no
		  JOIN customer c
		    ON c.customer_no = r.customer_no
	     WHERE review_no=#{reviewNo}
	</select> 
	
	<!-- 전체 리뷰 리스트 반환 (어드민)-->
	<select id="findAll" resultMap="reviewMap">
		SELECT r.review_no, r.review_title, r.review_content, r.review_image, r.review_rating, r.review_date,
			   p.product_no, p.product_name,
			   c.customer_no, c.customer_name, c.customer_nickname
		  FROM review r
		  JOIN product p
		    ON p.product_no=p.product_no
		  JOIN customer c
		    ON r.customer_no=c.customer_no
	</select>
	
	<!-- 제품 번호로 리뷰 별점 리스트 반환 -->
	<select id="findRatingsByProductNo" resultType="int">
		SELECT review_rating
		  FROM review
		 WHERE product_no=#{productNo}
	</select>
	
	
	
</mapper>