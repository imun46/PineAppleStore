<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--  dto 멤버 변수 이름이랑 id 콜럼에 있는 프로퍼티 이름이랑 다르게 하기 -->
<mapper namespace="com.itwill.shop.mapper.ReviewMapper">

	<!--Review 맵 Product 포함-->
	<resultMap id="reviewMapProduct" type="Review" autoMapping="true">
		<id column="REVIEW_NO" property="reviewNo"/>
		<result column="REVIEW_TITLE" property="reviewTitle"/>
		<result column="REVIEW_CONTENT" property="reviewContent"/>
		<result column="REVIEW_IMAGE" property="reviewImage"/>
		<result column="REVIEW_RATING" property="reviewRating"/>
		<result column="REVIEW_DATE" property="reviewDate"/>
		
		<association property="product" javaType="Product"
					 resultMap="com.itwill.shop.mapper.ProductMapper.productMapBasic"></association>
		<association property="customer" javaType="Customer"
					 resultMap="com.itwill.shop.mapper.CustomerMapper.customerMapBasic"></association>
	</resultMap>

	<!--Review 맵 Customer 포함-->
	<resultMap id="reviewMapCustomer" type="Review" autoMapping="true">
		<id column="REVIEW_NO" property="reviewNo"/>
		<result column="REVIEW_TITLE" property="reviewTitle"/>
		<result column="REVIEW_CONTENT" property="reviewContent"/>
		<result column="REVIEW_IMAGE" property="reviewImage"/>
		<result column="REVIEW_RATING" property="reviewRating"/>
		<result column="REVIEW_DATE" property="reviewDate"/>
		
		<association property="customer" javaType="Customer"
					 resultMap="com.itwill.shop.mapper.CustomerMapper.customerMapBasic"></association>
		
	</resultMap>



	
	<!-- 리뷰 작성 -->
	<insert id="insert" parameterType="Review">
		<selectKey order="BEFORE" resultType="int" keyProperty="reviewNo"> 
		select review_review_no_seq.nextval from dual
		</selectKey>
		INSERT INTO review (review_no, product_no, review_title,
		review_content, review_image, review_rating, customer_no)
		VALUES(
		#{reviewNo},
		#{product.productNo},
		#{reviewTitle},
		#{reviewContent},
		#{reviewImage},
		#{reviewRating},
		#{customer.customerNo})
	</insert>
	
	<!-- 리뷰 수정 -->
	<update id="update" parameterType="Review">
		update review set
		review_title= #{reviewTitle},
		review_content=#{reviewContent},
		review_image=#{reviewImage},
		review_rating=#{reviewRating},
		review_date=SYSDATE,
		product_no=#{product.productNo},
		customer_no=#{customer.customerNo}
		where review_no=#{reviewNo}
		
	</update>
	
	<!-- 리뷰 삭제 -->
	<delete id="delete" parameterType="int">
		delete from review
		where review_no=#{reviewNo}
	</delete>
	
	<!-- 리뷰리스트(회원) -->
	<select id="findMyReview" parameterType ="int" resultMap="reviewMapProduct">
		select * from review r
join customer c
on r.customer_no=c.customer_no
join product p
on r.product_no=p.product_no
where r.customer_no=#{customerNo}
	</select>
	
	<!-- 리뷰리스트(상품) -->
	<select id="findProductReview" parameterType ="int" resultMap="reviewMapProduct">
		select * from review r
join customer c
on r.customer_no=c.customer_no
join product p
on r.product_no=p.product_no
where r.product_no=#{productNo}
	
	</select>
	
	<!-- 리뷰 한개 보기 -->
	<select id="findByReview" parameterType="int" resultMap="reviewMapProduct">
<<<<<<< Upstream, based on origin/mj
		select * from review r 
		join product p 
		on r.product_no = p.product_no 
		join customer c
		on r.customer_no = c.customer_no
 		where r.review_no =#{reviewNo}
=======
		select * from review r join product p on r.product_no = p.product_no where review_no =#{reviewNo}
>>>>>>> b54d38e 씨ㅡㅡ발
	</select>
</mapper>