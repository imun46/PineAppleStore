<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwill.shop.mapper.OrdersMapper">
	
	<!--Orders 맵 OrdersItem 포함-->
	<resultMap id="ordersMapOrdersItems" type="Orders" autoMapping="true">
		<id column="ORDERS_NO" property="ordersNo"/>
		<result column="ORDERS_DATE" property="ordersDate"/>
		<result column="ORDERS_ARRIVALDATE" property="ordersArrivaldate"/>
		<result column="ORDERS_TOTPRICE" property="ordersTotprice"/>
		<result column="ORDERS_FINALPRICE" property="ordersFinalprice"/>
		<result column="ORDERS_TOTQTY" property="ordersTotqty"/>
		<result column="ORDERS_ADDRESS" property="ordersAddress"/>
		<result column="ORDERS_STATUS" property="ordersStatus"/>
		
		<collection property="ordersItemsList" ofType="OrdersItems"
					resultMap="com.itwill.shop.mapper.OrdersItemsMapper.ordersItemsMapProduct"></collection>
	</resultMap>
	
	
	<!-- 주문 등록 -->
	<insert id="insertOrders" parameterType="Orders">
		<selectKey order="BEFORE" resultType="int" keyProperty="ordersNo">
			SELECT orders_orders_no_seq.nextval FROM DUAL
		</selectKey>
			INSERT INTO orders(Orders_No, Orders_Date, Orders_Arrivaldate, Orders_Totprice, Orders_Finalprice, Orders_Totqty, Orders_Address, Orders_Status, Customer_No, Customer_Coupons_No) 
			     VALUES (#{ordersNo}, sysdate, sysdate+3, #{ordersTotprice}, #{ordersFinalprice}, #{ordersTotqty}, #{ordersAddress}, #{ordersStatus}, #{customer.customerNo}, 
            #{customerCoupons.customerCouponsNo})
	</insert>
	
	<!-- 주문 아이템 등록 -->
	<insert id="insertOrdersItems" parameterType="OrdersItems">
		<selectKey order="BEFORE" resultType="int" keyProperty="ordersItemsNo">
			SELECT orders_items_orders_items_no_seq.nextval FROM DUAL
		</selectKey>
			 INSERT INTO orders_items (orders_items_no, orders_items_price,orders_items_finalprice, orders_items_qty, orders_items_options, orders_no, product_no) 
		    	  VALUES (#{ordersItemsNo}, #{ordersItemsPrice}, #{ordersItemsFinalprice}, #{ordersItemsQty}, #{ordersItemsOptions},orders_orders_no_seq.currval, #{product.productNo})
	</insert>
	
	<!-- 배송 상태 변경 (어드민) -->
	<update id="updateOrdersStatus" parameterType="map">
		UPDATE orders
		   SET orders_status=#{ordersStatus}
		 WHERE orders_no=#{ordersNo}
	</update>
		
	<!-- 구매 확정 (회원) -->
	<update id="updateOrdersConfirm" parameterType="int">
		UPDATE orders
		   SET orders_status = '구매 확정', orders_arrivaldate = sysdate
		 WHERE orders_no=#{ordersNo}
	</update>
	
	<!-- 배송 시작 여부 확인 -->
	<select id="checkOrdersStatusNotArrived" parameterType="int">
		SELECT count(*)
  		  FROM orders
 		 WHERE orders_status='배송전'
       		   AND orders_no=#{ordersNo}
	</select>
	
	<!-- 주문 취소 (회원) -->
	<update id="cancelOrdersByOrdersNo" parameterType="int">
		UPDATE orders
		   SET orders_status = '주문 취소', orders_arrivaldate = sysdate
		 WHERE orders_no=#{ordersNo}
	</update>
	
	
	<!-- 주문 전체 리스트 반환 (어드민) -->
	<select id="findAll" resultMap="ordersMapOrdersItems">

	</select>
	
	<!-- 주문 번호로 주문 + 주문 아이템 리스트 반환 -->
	<select id="findByOrdersNo" parameterType="int" resultMap="ordersMapOrdersItems">
		SELECT o.orders_no, o.orders_date, o.orders_arrivaldate, o.orders_totprice, o.orders_finalprice, o.orders_totqty, o.orders_address, o.orders_status,
      		   oi.orders_items_no, oi.orders_items_price, oi.orders_items_finalprice, oi.orders_items_qty, oi.orders_items_options
  		  FROM orders o
		  JOIN orders_items oi
    		ON o.orders_no=oi.orders_no
    	 WHERE o.orders_no=#{ordersNo}
	</select>

    <!-- product join 문 없어서 product 조인문 넣었습니다 주석 확인해주세요  -->
	<!-- 회원 번호로 주문 + 주문 아이템 리스트 반환 -->
	<select id="findByCustomerNo" parameterType="int" resultMap="ordersMapOrdersItems">
		select o.orders_no, o.orders_date, o.orders_arrivaldate, o.orders_totprice, o.orders_finalprice, o.orders_totqty, o.orders_address, o.orders_status,
      		   oi.orders_items_no, oi.orders_items_price, oi.orders_items_finalprice, oi.orders_items_qty, oi.orders_items_options, oi.product_no,
               p.product_no, p.product_name,p.product_price,p.product_category,p.product_detailpage,p.product_desc,p.product_status
  		  from orders o
		  join orders_items oi
    		on o.orders_no=oi.orders_no
            join product p
            on oi.product_no=p.product_no
    	 where o.customer_no= #{customer_no}
	</select>
		
		
	<!-- 주문 번호로 주문 삭제 -->
	<delete id="deleteByOrdersNo" parameterType="int">
		DELETE FROM orders
		 WHERE orders_no=#{ordersNo}
	</delete>
		
		
		
		
</mapper>